List 5 difference between Browser JS(console) v Nodejs

Browser JS:-
=>Javascript is a Scripting language. 
=>It is mostly abbreviated as JS.
=>It can be said that Javascript is the updated version of the ECMA script. 
=>Javascript is a high-level programming language that uses the concept of Oops but it is based on prototype inheritance. 

Nodejs:-
=>NodeJS is a cross-platform and opensource Javascript runtime environment that allows the javascript to be run on the server-side. 
=>Nodejs allows Javascript code to run outside the browser.
=>Nodejs comes with a lot of modules and mostly used in web development. 

Execute the below code and write your description in txt file
   typeof(1):-
  =>typeof is a JavaScript keyword that will return the type of a variable when you call it. 
You can use this to validate function parameters or check if variables are defined. There are other uses as well. 
The typeof operator is useful because it is an easy way to check the type of a variable in your code.
   typeof(true):-
  =>the easiest way to check for true and false is : (typeof value === "boolean") 
but if value is an instance of the Boolean class, then it will return "object".
   typeof(null):-
  =>What is typeof null in JavaScript?
In JavaScript null is "nothing". It is supposed to be something that doesn't exist. 
Unfortunately, in JavaScript, the data type of null is an object. 
You can consider it a bug in JavaScript that typeof null is an object.
   typeof(undefined):-
  =>Here the assigned variables don't have any value but the variable exists. Here the type of variable is undefined. 
If you assigned a value(var geeks === undefined ) it will show, if not it will also show undefined but in different meaning. 
   typeof([]):-
   =>The typeof an array is an object. In JavaScript, arrays are technically objects
just with special behaviours and abilities. For example, arrays have a Array. 
To differentiate an Array object from an Object object, we can use the Array.
   typeof({}):-
   =>The typeof operator is used to get the data type (returns a string) of its operand. 
The operand can be either a literal or a data structure such as a variable, a function, or an object. 
   typeof(NaN):-
   =>The type of NaN , which stands for Not a Number is, surprisingly, a number. ... 
However, it is a numeric data type whose value cannot be represented using actual numbers.
So, the name "Not a Number", doesn't mean that the value is not numeric.
It instead means that the value cannot be expressed with numbers.

Read what is prototype   
   =>Prototypes are the mechanism by which JavaScript objects inherit features from one another.
 In this article, we explain how prototype chains work and look at how the prototype property can be used to add methods to existing constructors.




